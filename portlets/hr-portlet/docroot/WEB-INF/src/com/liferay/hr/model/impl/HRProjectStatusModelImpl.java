/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.hr.model.impl;

import com.liferay.hr.model.HRProjectStatus;
import com.liferay.hr.model.HRProjectStatusModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the HRProjectStatus service. Represents a row in the &quot;HRProjectStatus&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.hr.model.HRProjectStatusModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HRProjectStatusImpl}.
 * </p>
 *
 * @author Wesley Gong
 * @see HRProjectStatusImpl
 * @see com.liferay.hr.model.HRProjectStatus
 * @see com.liferay.hr.model.HRProjectStatusModel
 * @generated
 */
public class HRProjectStatusModelImpl extends BaseModelImpl<HRProjectStatus>
	implements HRProjectStatusModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a h r project status model instance should use the {@link com.liferay.hr.model.HRProjectStatus} interface instead.
	 */
	public static final String TABLE_NAME = "HRProjectStatus";
	public static final Object[][] TABLE_COLUMNS = {
			{ "hrProjectStatusId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "code_", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table HRProjectStatus (hrProjectStatusId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,code_ VARCHAR(75) null,name VARCHAR(75) null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table HRProjectStatus";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.hr.model.HRProjectStatus"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.hr.model.HRProjectStatus"),
			true);

	public Class<?> getModelClass() {
		return HRProjectStatus.class;
	}

	public String getModelClassName() {
		return HRProjectStatus.class.getName();
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.hr.model.HRProjectStatus"));

	public HRProjectStatusModelImpl() {
	}

	public long getPrimaryKey() {
		return _hrProjectStatusId;
	}

	public void setPrimaryKey(long primaryKey) {
		setHrProjectStatusId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_hrProjectStatusId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public long getHrProjectStatusId() {
		return _hrProjectStatusId;
	}

	public void setHrProjectStatusId(long hrProjectStatusId) {
		_hrProjectStatusId = hrProjectStatusId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public String getCode() {
		if (_code == null) {
			return StringPool.BLANK;
		}
		else {
			return _code;
		}
	}

	public void setCode(String code) {
		if (_originalCode == null) {
			_originalCode = _code;
		}

		_code = code;
	}

	public String getOriginalCode() {
		return GetterUtil.getString(_originalCode);
	}

	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public HRProjectStatus toEscapedModel() {
		if (isEscapedModel()) {
			return (HRProjectStatus)this;
		}
		else {
			if (_escapedModelProxy == null) {
				_escapedModelProxy = (HRProjectStatus)Proxy.newProxyInstance(_classLoader,
						_escapedModelProxyInterfaces,
						new AutoEscapeBeanHandler(this));
			}

			return _escapedModelProxy;
		}
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					HRProjectStatus.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		HRProjectStatusImpl hrProjectStatusImpl = new HRProjectStatusImpl();

		hrProjectStatusImpl.setHrProjectStatusId(getHrProjectStatusId());
		hrProjectStatusImpl.setGroupId(getGroupId());
		hrProjectStatusImpl.setCompanyId(getCompanyId());
		hrProjectStatusImpl.setUserId(getUserId());
		hrProjectStatusImpl.setUserName(getUserName());
		hrProjectStatusImpl.setCreateDate(getCreateDate());
		hrProjectStatusImpl.setModifiedDate(getModifiedDate());
		hrProjectStatusImpl.setCode(getCode());
		hrProjectStatusImpl.setName(getName());
		hrProjectStatusImpl.setDescription(getDescription());

		hrProjectStatusImpl.resetOriginalValues();

		return hrProjectStatusImpl;
	}

	public int compareTo(HRProjectStatus hrProjectStatus) {
		long primaryKey = hrProjectStatus.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		HRProjectStatus hrProjectStatus = null;

		try {
			hrProjectStatus = (HRProjectStatus)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = hrProjectStatus.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		HRProjectStatusModelImpl hrProjectStatusModelImpl = this;

		hrProjectStatusModelImpl._originalGroupId = hrProjectStatusModelImpl._groupId;

		hrProjectStatusModelImpl._setOriginalGroupId = false;

		hrProjectStatusModelImpl._originalCode = hrProjectStatusModelImpl._code;
	}

	@Override
	public CacheModel<HRProjectStatus> toCacheModel() {
		HRProjectStatusCacheModel hrProjectStatusCacheModel = new HRProjectStatusCacheModel();

		hrProjectStatusCacheModel.hrProjectStatusId = getHrProjectStatusId();

		hrProjectStatusCacheModel.groupId = getGroupId();

		hrProjectStatusCacheModel.companyId = getCompanyId();

		hrProjectStatusCacheModel.userId = getUserId();

		hrProjectStatusCacheModel.userName = getUserName();

		String userName = hrProjectStatusCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			hrProjectStatusCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			hrProjectStatusCacheModel.createDate = createDate.getTime();
		}
		else {
			hrProjectStatusCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			hrProjectStatusCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			hrProjectStatusCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		hrProjectStatusCacheModel.code = getCode();

		String code = hrProjectStatusCacheModel.code;

		if ((code != null) && (code.length() == 0)) {
			hrProjectStatusCacheModel.code = null;
		}

		hrProjectStatusCacheModel.name = getName();

		String name = hrProjectStatusCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			hrProjectStatusCacheModel.name = null;
		}

		hrProjectStatusCacheModel.description = getDescription();

		String description = hrProjectStatusCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			hrProjectStatusCacheModel.description = null;
		}

		return hrProjectStatusCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{hrProjectStatusId=");
		sb.append(getHrProjectStatusId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", code=");
		sb.append(getCode());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.liferay.hr.model.HRProjectStatus");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>hrProjectStatusId</column-name><column-value><![CDATA[");
		sb.append(getHrProjectStatusId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>code</column-name><column-value><![CDATA[");
		sb.append(getCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = HRProjectStatus.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			HRProjectStatus.class
		};
	private long _hrProjectStatusId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _code;
	private String _originalCode;
	private String _name;
	private String _description;
	private transient ExpandoBridge _expandoBridge;
	private HRProjectStatus _escapedModelProxy;
}